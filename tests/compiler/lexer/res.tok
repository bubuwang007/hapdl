TokenInfo(Keywords.PYIMPORT, 'pyimport', 2, 1, 8)
TokenInfo(Token.IDENTIFIER, 'os', 2, 10, 11)
TokenInfo(Token.SEMICOLON, ';', 2, 12, 12)
TokenInfo(Keywords.IMPORT, 'import', 3, 1, 6)
TokenInfo(Token.IDENTIFIER, 'numpy', 3, 8, 12)
TokenInfo(Keywords.AS, 'as', 3, 14, 15)
TokenInfo(Token.IDENTIFIER, 'np', 3, 17, 18)
TokenInfo(Token.SEMICOLON, ';', 3, 19, 19)
TokenInfo(Token.COMMENT, '# This is a comment', 5, 1, 19)
TokenInfo(Keywords.LET, 'let', 6, 1, 3)
TokenInfo(Token.IDENTIFIER, 'a', 6, 5, 5)
TokenInfo(Token.COLON, ':', 6, 6, 6)
TokenInfo(Keywords.BasicType.NUM, 'num', 6, 7, 9)
TokenInfo(Token.EQ, '=', 6, 11, 11)
TokenInfo(Token.FLOAT, '125.567', 6, 13, 19)
TokenInfo(Token.SEMICOLON, ';', 6, 20, 20)
TokenInfo(Token.COMMENT, '# 125.567', 6, 22, 30)
TokenInfo(Keywords.LET, 'let', 7, 1, 3)
TokenInfo(Keywords.GLOBAL, 'global', 7, 5, 10)
TokenInfo(Keywords.CONST, 'const', 7, 12, 16)
TokenInfo(Token.IDENTIFIER, 'b', 7, 18, 18)
TokenInfo(Token.COLON, ':', 7, 19, 19)
TokenInfo(Keywords.BasicType.COMPLEX, 'complex', 7, 21, 27)
TokenInfo(Token.EQ, '=', 7, 29, 29)
TokenInfo(Token.INTEGER, '1', 7, 31, 31)
TokenInfo(Token.PLUS, '+', 7, 33, 33)
TokenInfo(Token.IMAGE, '5j', 7, 35, 36)
TokenInfo(Token.SEMICOLON, ';', 7, 37, 37)
TokenInfo(Keywords.LET, 'let', 8, 1, 3)
TokenInfo(Token.IDENTIFIER, 'c', 8, 5, 5)
TokenInfo(Token.COLON, ':', 8, 6, 6)
TokenInfo(Keywords.BasicType.NUM, 'num', 8, 8, 10)
TokenInfo(Token.EQ, '=', 8, 12, 12)
TokenInfo(Token.INTEGER, '1', 8, 14, 14)
TokenInfo(Token.SEMICOLON, ';', 8, 15, 15)
TokenInfo(Keywords.LET, 'let', 9, 1, 3)
TokenInfo(Token.IDENTIFIER, 'a', 9, 5, 5)
TokenInfo(Token.COLON, ':', 9, 6, 6)
TokenInfo(Token.IDENTIFIER, 'str', 9, 8, 10)
TokenInfo(Token.EQ, '=', 9, 12, 12)
TokenInfo(Token.STRING, 'Hello, World!\n', 9, 14, 30)
TokenInfo(Token.SEMICOLON, ';', 9, 31, 31)
TokenInfo(Token.COMMENT, '# let s: str = "Hello, World!\\8";', 10, 1, 33)
TokenInfo(Token.IDENTIFIER, 'struct', 12, 1, 6)
TokenInfo(Token.IDENTIFIER, 'Point', 12, 8, 12)
TokenInfo(Token.LBRACE, '{', 12, 14, 14)
TokenInfo(Token.IDENTIFIER, 'x', 13, 5, 5)
TokenInfo(Token.COLON, ':', 13, 6, 6)
TokenInfo(Keywords.BasicType.NUM, 'num', 13, 8, 10)
TokenInfo(Token.SEMICOLON, ';', 13, 11, 11)
TokenInfo(Token.IDENTIFIER, 'y', 14, 5, 5)
TokenInfo(Token.COLON, ':', 14, 6, 6)
TokenInfo(Keywords.BasicType.NUM, 'num', 14, 8, 10)
TokenInfo(Token.SEMICOLON, ';', 14, 11, 11)
TokenInfo(Token.RBRACE, '}', 15, 1, 1)
TokenInfo(Token.IDENTIFIER, 'impl', 17, 1, 4)
TokenInfo(Token.IDENTIFIER, 'Point', 17, 6, 10)
TokenInfo(Token.LBRACE, '{', 17, 12, 12)
TokenInfo(Keywords.FUNC, 'func', 18, 5, 8)
TokenInfo(Token.IDENTIFIER, 'new', 18, 10, 12)
TokenInfo(Token.LPAR, '(', 18, 13, 13)
TokenInfo(Token.IDENTIFIER, 'x', 18, 14, 14)
TokenInfo(Token.COLON, ':', 18, 15, 15)
TokenInfo(Keywords.BasicType.NUM, 'num', 18, 17, 19)
TokenInfo(Token.COMMA, ',', 18, 20, 20)
TokenInfo(Token.IDENTIFIER, 'y', 18, 22, 22)
TokenInfo(Token.COLON, ':', 18, 23, 23)
TokenInfo(Keywords.BasicType.NUM, 'num', 18, 25, 27)
TokenInfo(Token.RPAR, ')', 18, 28, 28)
TokenInfo(Token.MINUSARROW, '->', 18, 30, 31)
TokenInfo(Token.IDENTIFIER, 'Point', 18, 33, 37)
TokenInfo(Token.LBRACE, '{', 18, 39, 39)
TokenInfo(Token.IDENTIFIER, 'Point', 19, 9, 13)
TokenInfo(Token.LBRACE, '{', 19, 15, 15)
TokenInfo(Token.IDENTIFIER, 'x', 19, 17, 17)
TokenInfo(Token.COLON, ':', 19, 18, 18)
TokenInfo(Token.IDENTIFIER, 'x', 19, 20, 20)
TokenInfo(Token.COMMA, ',', 19, 21, 21)
TokenInfo(Token.IDENTIFIER, 'y', 19, 23, 23)
TokenInfo(Token.COLON, ':', 19, 24, 24)
TokenInfo(Token.IDENTIFIER, 'y', 19, 26, 26)
TokenInfo(Token.RBRACE, '}', 19, 28, 28)
TokenInfo(Token.RBRACE, '}', 20, 5, 5)
TokenInfo(Keywords.FUNC, 'func', 22, 5, 8)
TokenInfo(Token.IDENTIFIER, 'distance', 22, 10, 17)
TokenInfo(Token.LPAR, '(', 22, 18, 18)
TokenInfo(Token.AMPER, '&', 22, 19, 19)
TokenInfo(Token.IDENTIFIER, 'self', 22, 20, 23)
TokenInfo(Token.COMMA, ',', 22, 24, 24)
TokenInfo(Token.IDENTIFIER, 'other', 22, 26, 30)
TokenInfo(Token.COLON, ':', 22, 31, 31)
TokenInfo(Token.IDENTIFIER, 'Point', 22, 33, 37)
TokenInfo(Token.RPAR, ')', 22, 38, 38)
TokenInfo(Token.MINUSARROW, '->', 22, 40, 41)
TokenInfo(Keywords.BasicType.NUM, 'num', 22, 43, 45)
TokenInfo(Token.LBRACE, '{', 22, 47, 47)
TokenInfo(Keywords.LET, 'let', 23, 9, 11)
TokenInfo(Token.IDENTIFIER, 'x_diff', 23, 13, 18)
TokenInfo(Token.EQ, '=', 23, 20, 20)
TokenInfo(Token.IDENTIFIER, 'self', 23, 22, 25)
TokenInfo(Token.DOT, '.', 23, 26, 26)
TokenInfo(Token.IDENTIFIER, 'x', 23, 27, 27)
TokenInfo(Token.MINUS, '-', 23, 29, 29)
TokenInfo(Token.IDENTIFIER, 'other', 23, 31, 35)
TokenInfo(Token.DOT, '.', 23, 36, 36)
TokenInfo(Token.IDENTIFIER, 'x', 23, 37, 37)
TokenInfo(Token.SEMICOLON, ';', 23, 38, 38)
TokenInfo(Keywords.LET, 'let', 24, 9, 11)
TokenInfo(Token.IDENTIFIER, 'y_diff', 24, 13, 18)
TokenInfo(Token.EQ, '=', 24, 20, 20)
TokenInfo(Token.IDENTIFIER, 'self', 24, 22, 25)
TokenInfo(Token.DOT, '.', 24, 26, 26)
TokenInfo(Token.IDENTIFIER, 'y', 24, 27, 27)
TokenInfo(Token.MINUS, '-', 24, 29, 29)
TokenInfo(Token.IDENTIFIER, 'other', 24, 31, 35)
TokenInfo(Token.DOT, '.', 24, 36, 36)
TokenInfo(Token.IDENTIFIER, 'y', 24, 37, 37)
TokenInfo(Token.SEMICOLON, ';', 24, 38, 38)
TokenInfo(Token.LPAR, '(', 25, 9, 9)
TokenInfo(Token.IDENTIFIER, 'x_diff', 25, 10, 15)
TokenInfo(Token.DOUBLESTAR, '**', 25, 17, 18)
TokenInfo(Token.INTEGER, '2', 25, 20, 20)
TokenInfo(Token.PLUS, '+', 25, 22, 22)
TokenInfo(Token.IDENTIFIER, 'y_diff', 25, 24, 29)
TokenInfo(Token.DOUBLESTAR, '**', 25, 31, 32)
TokenInfo(Token.INTEGER, '2', 25, 34, 34)
TokenInfo(Token.RPAR, ')', 25, 35, 35)
TokenInfo(Token.DOUBLESTAR, '**', 25, 37, 38)
TokenInfo(Token.FLOAT, '0.5', 25, 40, 42)
TokenInfo(Token.RBRACE, '}', 26, 5, 5)
TokenInfo(Token.RBRACE, '}', 27, 1, 1)
TokenInfo(Keywords.FOR, 'for', 29, 1, 3)
TokenInfo(Token.IDENTIFIER, 'i', 29, 5, 5)
TokenInfo(Keywords.IN, 'in', 29, 7, 8)
TokenInfo(Token.IDENTIFIER, 'range', 29, 10, 14)
TokenInfo(Token.LPAR, '(', 29, 15, 15)
TokenInfo(Token.INTEGER, '10', 29, 16, 17)
TokenInfo(Token.RPAR, ')', 29, 18, 18)
TokenInfo(Token.LBRACE, '{', 29, 20, 20)
TokenInfo(Token.IDENTIFIER, 'print', 30, 5, 9)
TokenInfo(Token.LPAR, '(', 30, 10, 10)
TokenInfo(Token.IDENTIFIER, 'i', 30, 11, 11)
TokenInfo(Token.RPAR, ')', 30, 12, 12)
TokenInfo(Token.SEMICOLON, ';', 30, 13, 13)
TokenInfo(Token.RBRACE, '}', 31, 1, 1)
TokenInfo(Keywords.WHILE, 'while', 33, 1, 5)
TokenInfo(Token.IDENTIFIER, 'c', 33, 7, 7)
TokenInfo(Token.LT, '<', 33, 9, 9)
TokenInfo(Token.INTEGER, '10', 33, 11, 12)
TokenInfo(Token.LBRACE, '{', 33, 14, 14)
TokenInfo(Token.IDENTIFIER, 'print', 34, 5, 9)
TokenInfo(Token.LPAR, '(', 34, 10, 10)
TokenInfo(Token.IDENTIFIER, 'c', 34, 11, 11)
TokenInfo(Token.RPAR, ')', 34, 12, 12)
TokenInfo(Token.SEMICOLON, ';', 34, 13, 13)
TokenInfo(Token.IDENTIFIER, 'c', 35, 5, 5)
TokenInfo(Token.PLUSEQ, '+=', 35, 7, 8)
TokenInfo(Token.INTEGER, '1', 35, 10, 10)
TokenInfo(Token.SEMICOLON, ';', 35, 11, 11)
TokenInfo(Token.RBRACE, '}', 36, 1, 1)
TokenInfo(Keywords.IF, 'if', 38, 1, 2)
TokenInfo(Token.IDENTIFIER, 'c', 38, 4, 4)
TokenInfo(Token.EQEQ, '==', 38, 6, 7)
TokenInfo(Token.INTEGER, '10', 38, 9, 10)
TokenInfo(Token.LBRACE, '{', 38, 12, 12)
TokenInfo(Token.IDENTIFIER, 'print', 39, 5, 9)
TokenInfo(Token.LPAR, '(', 39, 10, 10)
TokenInfo(Token.STRING, 'c is 10', 39, 11, 19)
TokenInfo(Token.RPAR, ')', 39, 20, 20)
TokenInfo(Token.SEMICOLON, ';', 39, 21, 21)
TokenInfo(Token.RBRACE, '}', 40, 1, 1)
TokenInfo(Keywords.ELSE, 'else', 40, 3, 6)
TokenInfo(Token.LBRACE, '{', 40, 8, 8)
TokenInfo(Token.IDENTIFIER, 'print', 41, 5, 9)
TokenInfo(Token.LPAR, '(', 41, 10, 10)
TokenInfo(Token.STRING, 'c is not 10', 41, 11, 23)
TokenInfo(Token.RPAR, ')', 41, 24, 24)
TokenInfo(Token.SEMICOLON, ';', 41, 25, 25)
TokenInfo(Token.RBRACE, '}', 42, 1, 1)
TokenInfo(Keywords.MATCH, 'match', 44, 1, 5)
TokenInfo(Token.IDENTIFIER, 'c', 44, 7, 7)
TokenInfo(Token.LBRACE, '{', 44, 9, 9)
TokenInfo(Token.INTEGER, '1', 45, 5, 5)
TokenInfo(Token.EQARROW, '=>', 45, 7, 8)
TokenInfo(Token.IDENTIFIER, 'print', 45, 10, 14)
TokenInfo(Token.LPAR, '(', 45, 15, 15)
TokenInfo(Token.STRING, 'c is 1', 45, 16, 23)
TokenInfo(Token.RPAR, ')', 45, 24, 24)
TokenInfo(Token.COMMA, ',', 45, 25, 25)
TokenInfo(Token.INTEGER, '2', 46, 5, 5)
TokenInfo(Token.EQARROW, '=>', 46, 7, 8)
TokenInfo(Token.IDENTIFIER, 'print', 46, 10, 14)
TokenInfo(Token.LPAR, '(', 46, 15, 15)
TokenInfo(Token.STRING, 'c is 2', 46, 16, 23)
TokenInfo(Token.RPAR, ')', 46, 24, 24)
TokenInfo(Token.COMMA, ',', 46, 25, 25)
TokenInfo(Token.INTEGER, '3', 47, 5, 5)
TokenInfo(Token.EQARROW, '=>', 47, 7, 8)
TokenInfo(Token.IDENTIFIER, 'print', 47, 10, 14)
TokenInfo(Token.LPAR, '(', 47, 15, 15)
TokenInfo(Token.STRING, 'c is 3', 47, 16, 23)
TokenInfo(Token.RPAR, ')', 47, 24, 24)
TokenInfo(Token.COMMA, ',', 47, 25, 25)
TokenInfo(Token.IDENTIFIER, '_', 48, 5, 5)
TokenInfo(Token.EQARROW, '=>', 48, 7, 8)
TokenInfo(Token.IDENTIFIER, 'print', 48, 10, 14)
TokenInfo(Token.LPAR, '(', 48, 15, 15)
TokenInfo(Token.STRING, 'c is not 1, 2, or 3', 48, 16, 36)
TokenInfo(Token.RPAR, ')', 48, 37, 37)
TokenInfo(Token.RBRACE, '}', 49, 1, 1)
